name: Regression buid workflow

on:
  push:
    branches:
      - 'release/*'
    tags:
      - 'v**'

jobs:
  build:
    name: Make release apk and upload it to Drive , Slack & send Mail to organization about regression build
    runs-on: ubuntu-latest


    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install pip
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/workflows/requirements.txt


      - name: Generate Change logs
        id: changelogs
        working-directory: .github/workflows/
        #        run: echo "::set-output name=changelog::$(echo python release_mail_generator.py ${{ secrets.GITHUB_TOKEN }}  v2.21)"
        run: python release_mail_generator.py ${{ secrets.GITHUB_TOKEN }}  v2.21



      - name: Getting build info by apk name
        uses: jungwinter/split@v1
        id: build_info
        with:
          msg: merchant-430-2.20.3.apk
          seperator: '-'

      - name: Echo build info
        run: |
          echo ${{ steps.build_info.outputs._0 }}
          echo build no ${{ steps.build_info.outputs._1 }}
          echo ${{ steps.build_info.outputs._2 }}

      - name: Splitting for tag name
        uses: jungwinter/split@v1
        id: split_tag
        with:
          msg: ${{ steps.build_info.outputs._2 }}
          seperator: '.'

      - name: Make Tag name
        id: tag_name
        run: echo "::set-output name=tag_name::v${{ steps.split_tag.outputs._0 }}.${{ steps.split_tag.outputs._1 }}.${{ steps.split_tag.outputs._2 }}"

      - run: |
          echo ${{ steps.tag_name.outputs.tag_name }}

      - name: Extract branch name
        id: branch_name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"


      - name: Replace string
        id: replace_string
        uses: BjornLuG/substitute-string-action@v1
        with:
          _input-text: ${{ steps.branch_name.outputs.branch }}
          release: merchant


      - name: Echo
        run: |
          echo ${{ steps.branch_name.outputs.branch }}
          echo ${{ steps.replace_string.outputs.result }}


      - name: Setup JDK 1.8
        uses: actions/setup-java@master
        with:
          java-version: 1.8

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Build Release APK
        run: bash ./gradlew assembleRelease


      - name: Getting generated APK name
        id: list_files
        working-directory: app/build/outputs/apk/release/
        run: echo "::set-output name=apk_name::$(echo *.apk)"


      - name: Adding 'mi' prefix to apk name
        id: prefix
        working-directory: app/build/outputs/apk/release/
        run: mv ${{steps.list_files.outputs.apk_name}} kop-${{steps.list_files.outputs.apk_name}}
      #        run: echo "::set-output name=mi_apk::$(mv ${{steps.list_files.outputs.apk_name}} xxx-${{steps.list_files.outputs.apk_name}})"



      - name: Echo apk name
        run: |
          echo --------------------------
          echo ${{ steps.prefix.outputs.mi_apk }}
          echo --------------------------
          echo ${{ steps.list_files.outputs.apk_name }}


      - name: Getting renamed APK name
        id: renamed_apk
        working-directory: app/build/outputs/apk/release/
        run: echo "::set-output name=apk_name::$(echo *.apk)"

      - name: Upload APK to Google Drive
        uses: satackey/action-google-drive@v1
        with:
          skicka-tokencache-json: ${{ secrets.SKICKA_TOKENCACHE_JSON }}
          upload-from: app/build/outputs/apk/release/${{steps.renamed_apk.outputs.apk_name}}
          upload-to: /release_apks


      #      - name: Send mail
      #        uses: dawidd6/action-send-mail@v2
      #        with:
      #          server_address: smtp.gmail.com
      #          server_port: 465
      #          username: ${{ secrets.GMAIL_USER_NAME }}
      #          password: ${{ secrets.GMAIL_PASSWORD }}
      #          subject: Android Regression CI/CD Test
      #          body: ${{ steps.changelogs.outputs.changelog }}
      #          to: karthik@okcredit.in
      #          from: ${{ secrets.GMAIL_USER_NAME }}
      #          content_type: text/html
      #          #attachments: app/build/outputs/apk/prodFlavour/artifacts/newYorlTimes


      - name: Upload APK to Slack
        uses: adrey/slack-file-upload-action@master
        with:
          initial_comment: Android Release *v2.20.1* made. *Download build* <${{ secrets.OUT_OF_STORE_GOOGLE_DRIVE_LINK }}|Google Drive Link>
          token: ${{ secrets.SLACK_SECRETS }}
          path: app/build/outputs/apk/release/${{steps.renamed_apk.outputs.apk_name}}
          channel: android_ci_cd_test


      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.split_tag.outputs._0 }}.${{ steps.split_tag.outputs._1 }}.${{ steps.split_tag.outputs._2 }}
          release_name: Release v${{ steps.split_tag.outputs._0 }}.${{ steps.split_tag.outputs._1 }}.${{ steps.split_tag.outputs._2 }}
          body: |
            Change Logs
                - First Change
                - Second Change
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: app/build/outputs/apk/release/${{steps.renamed_apk.outputs.apk_name}}
          asset_name: ${{steps.renamed_apk.outputs.apk_name}}
          asset_content_type: application/zip


#      - name: Send Mail Action
#        id: sendmail
#        uses: vineetchoudhary/mailgun-action@v1.0
#        with:
#          api-key: pubkey-20de4eb9ac561a086649527cffe4ca42
#          domain: sandboxf5aec72fe73745899967b471d866156a.mailgun.org
#          to: karthik.kolanji90@gmail.com,nishant@okcredit.in
#
#      - name: Send Mail Action Response
#        run: echo "${{ steps.sendmail.outputs.response }}"


